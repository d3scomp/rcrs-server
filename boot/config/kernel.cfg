# Name of the kernel log file
kernel.logname: logs/rescue.log

# Number of timesteps to run
kernel.timesteps: 300

# The simulation termination conditions
kernel.termination: kernel.TimestepTerminationCondition
#kernel.termination: kernel.TimestepTerminationCondition rescuecore2.standard.kernel.CiviliansDeadOrRescuedTerminationCondition

# The amount of time (ms) agents have to send commands each timestep
kernel.agents.think-time: 1000
# Number of timesteps that agents commands are ignored
kernel.agents.ignoreuntil: 3

# List of command collectors to use
kernel.commandcollectors: kernel.TimedCommandCollector
#kernel.commandcollectors: kernel.TimedCommandCollector rescuecore2.standard.kernel.StandardCommandCollector

# List of command filters to use
kernel.commandfilters: kernel.WrongTimeCommandFilter kernel.FrozenAgentsCommandFilter rescuecore2.standard.kernel.DeadAgentsCommandFilter

# The agent registrar
kernel.agents.registrar: rescuecore2.standard.kernel.StandardAgentRegistrar

# The amount of time agents have to start up
kernel.startup.connect-time: 300000 # 5 minute startup time
# kernel.startup.connect-time: 10000 # 10 second startup time

# Automatic choice of GIS
kernel.gis.auto: gis2.GMLWorldModelCreator

# Automatic choice of perception
kernel.perception.auto: rescuecore2.standard.kernel.StandardPerception

# Automatic choice of communication model
kernel.communication.auto: rescuecore2.standard.kernel.comms.ChannelCommunicationModel

# Automatically start simulators/viewers/agents
kernel.simulators.auto: collapse.CollapseSimulator clear.ClearSimulator misc.MiscSimulator firesimulator.FireSimulatorWrapper traffic3.simulator.TrafficSimulator ignition.IgnitionSimulator
kernel.viewers.auto: sample.SampleViewer
kernel.agents.auto: sample.SampleFireBrigade*n sample.SamplePoliceForce*n sample.SampleAmbulanceTeam*n sample.SampleCentre*n sample.SampleCivilian*n

# Kernel UI components
kernel.ui.components: rescuecore2.standard.kernel.StandardWorldModelViewerComponent
